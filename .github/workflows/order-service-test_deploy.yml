# name: "Testing and Building"

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, closed, synchronized]
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   test:
#     runs_on: ubuntu-latest
#     steps:
#       - name: Get code from our repo
#         uses: actions/checkout@v3

#       - name: Install nodejs
#         uses: actions/setup-node@v3
#         with:
#           node-version: 22.12.0

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm # where to cache
#           key: ${{ runner.os  }}-node-${{ hashFiles("**/package-lock.json") }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code from our repo
#         uses: actions/checkout@v3

#       - name: Install nodejs
#         uses: actions/setup-node@v3
#         with:
#           node-version: 22.12.0

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: ${{ runner.os  }}-node-${{ hashFiles("**/package-lock.json") }}

#       - name: Install dependencies
#         run: npm install

#       - name: Run a build
#         run: npm run build

#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist-files #name of my downloaded artifact which I can reference in subsequent jobs
#           path: |
#             dist
#             register-consul.sh

#   # deploy:
#   #   needs: build
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Get build artifacts
#   #       uses: actions/download-artifact@v3
#   #       with: #it will only have the fcontents and not the folder
#   #         - name: dist-files # this is the key of the upload artifacts to get the it's uploads
#   #     - name: List contents
#   #       run: ls
#   #     - name: Deploy
#   #       run: echo "Deploying..."

# name: "Testing and Building - Order-Service"

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - "order-service/**" # Only trigger if files inside order-service change
#   pull_request:
#     types: [opened, closed, synchronized]
#     base:
#       - main
#     paths:
#       - "order-service/**" #Only trigger for PRs affecting order-service
#   workflow_dispatch:

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service: [order-service]
#         os: [ubuntu-latest, windows-latest]
#         node: [22.12.0, 16]
#         include: 
#           - os: ubuntu-latest
#             node: 18
#         exclude:
#           - os: windows-latest
#             node: 16
#     steps:
#       - name: Get code from our repo
#         uses: actions/checkout@v3

#       - name: Install nodejs
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node }}

#       # 
#       - name: Check current directory and list files
#         run: |
#           pwd
#           ls -la
#         working-directory: ${{matrix.service}}


#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles(${{matrix.service}} + '/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install dependencies
#         continue-on-error: true
#         run: npm install
#         working-directory: ${{ matrix.service }} # Ensure commands run inside the microservice folder

#       - name: Run tests
#         run: npm test
#         working-directory: ${{matrix.service}}

#   build:
#     needs: test
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service: [order-service]
#     steps:
#       - name: Get code from our repo
#         uses: actions/checkout@v3

#       - name: Install nodejs
#         uses: actions/setup-node@v3
#         with:
#           node-version: 22.12.0

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('${{matrix.service}}/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install dependencies
#         run: npm install
#         working-directory: ${{matrix.service}}

#       - name: Run a build
#         run: npm run build
#         working-directory: ${{matrix.service}}

#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: order-service-dist
#           path: |
#             ${{matrix.service}}/dist
#             ${{matrix.service}}/register-consul.sh

name: "Testing and Building - Order-Service"

on:
  push:
    branches:
      - main
    paths:
      - "order-service/**" # Only trigger if files inside order-service change
  pull_request:
    types: [opened, closed, synchronized]
    base:
      - main
    paths:
      - "order-service/**" # Only trigger for PRs affecting order-service
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [order-service]
        os: [ubuntu-latest, windows-latest]
        node: [22.12.0, 16]
       
    steps:
      - name: Get code from our repo
        uses: actions/checkout@v3

      - name: Load and Download nodejs using a composite action
        uses: ./.github/actions/download-node
        with:
          node-v: ${{ matrix.node }}
        
      - name: Check current directory and list files
        run: |
          pwd
          ls -la
        working-directory: ${{matrix.service}}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        continue-on-error: true
        run: npm install
        working-directory: ${{matrix.service}}

      - name: Run tests
        run: npm test
        working-directory: ${{matrix.service}}
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [order-service]
    steps:
      - name: Get code from our repo
        uses: actions/checkout@v3

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 22.12.0

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ${{matrix.service}}
      - name: Run a build
        run: npm run build
        working-directory: ${{ matrix.service }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: order-service-dist
          path: |
            ${{ matrix.service }}/dist
            ${{ matrix.service }}/register-consul.sh
